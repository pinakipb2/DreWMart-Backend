// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Retailer {
  id              String            @id @default(cuid())
  name            String
  walletAddress   String            @unique
  drewTokens      Int               @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  Store           Store[]
  RetailerCoupons RetailerCoupons[]
}

model Admin {
  id            String   @id @default(cuid())
  name          String
  walletAddress String   @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model User {
  id            String @id @default(cuid())
  firstName     String
  lastName      String
  emailId       String @unique
  phoneNumber   String @unique
  address       String @unique
  walletAddress String @unique
}

// warrantyDuration is in months
model Product {
  id               String   @id @default(cuid())
  name             String   @unique
  price            Decimal  @db.Decimal(9, 2)
  image            String   @unique
  rating           Decimal  @default(1) @db.Decimal(9, 1)
  color            String
  highlights       Json     @unique
  description      String   @unique
  warrantyDuration Int      @default(0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  Store            Store[]
}

model Store {
  id                String    @id @default(cuid())
  prodId            String    @unique
  Product           Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId         String
  Retailer          Retailer? @relation(fields: [retailerId], references: [id], onDelete: Cascade)
  retailerId        String?
  soldTo            String?
  soldAt            DateTime?
  isWarrantyClaimed Boolean   @default(false)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model CouponItems {
  id              String            @id @default(cuid())
  name            String            @unique
  price           BigInt            @default(100)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  RetailerCoupons RetailerCoupons[]
}

model RetailerCoupons {
  id            String      @id @default(cuid())
  Retailer      Retailer    @relation(fields: [retailerId], references: [id], onDelete: Cascade)
  retailerId    String
  CouponItem    CouponItems @relation(fields: [couponItemsId], references: [id], onDelete: Cascade)
  couponItemsId String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}
